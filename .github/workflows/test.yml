name: Coverage

on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        maven: ['3.8.5']
        java: [ '21' ]
    steps:
      - name: Setup Maven
        uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: ${{ matrix.java }}
          maven-version: ${{ matrix.maven }}
      - name: Generate coverage
        id: coverage
        run: |
          mvn compile
          mvn test
          mvn jacoco:report
          display=`sed -nE 's/^.*<td>Total<([^>]+>){4}([^<]*).*$/\2/p' target/site/jacoco/index.html`
          echo "display=$display" >> $GITHUB_OUTPUT    # with the "%"
          coverage=${display%"%"}
          echo "coverage=$coverage" >> $GITHUB_OUTPUT  # without "%", treated as a number
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - uses: actions/checkout@v1
        with:
          ref: badges
          path: badges
      - name: Create badges dir if necessary
        env:
          BRANCH: ${{ steps.extract_branch.outputs.branch }}
        run: mkdir -p badges/${BRANCH}
      # Use the output from the coverage step
      - name: Generate the badge SVG image
        uses: emibcn/badge-action@v2.0.2
        with:
          label: 'Test coverage'
          status: ${{ steps.coverage.outputs.display }}
          color: ${{
            steps.coverage.outputs.coverage > 90 && 'green'              ||
            steps.coverage.outputs.coverage > 80 && 'yellow,green'       ||
            steps.coverage.outputs.coverage > 70 && 'yellow'             ||
            steps.coverage.outputs.coverage > 60 && 'orange,yellow'      ||
            steps.coverage.outputs.coverage > 50 && 'orange'             ||
            steps.coverage.outputs.coverage > 40 && 'red,orange'         ||
            steps.coverage.outputs.coverage > 30 && 'red,red,orange'     ||
            steps.coverage.outputs.coverage > 20 && 'red,red,red,orange' ||
            'red' }}
          path: badges/${{ steps.extract_branch.outputs.branch }}/badge.svg
      - name: Commit & push badge
        env:
          BRANCH: ${{ steps.extract_branch.outputs.branch }}
        run: |
          pushd badges
              git config --local user.email "action@github.com"
              git config --local user.name "GitHub Action"
              git add "${BRANCH}/badge.svg"
              # Will give error if badge did not changed
              git commit -m "Add/Update badge" || true
          popd
      - name: Push badge commit
        uses: ad-m/github-push-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: badges
          directory: badges

          
